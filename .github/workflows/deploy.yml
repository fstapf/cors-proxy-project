name: Deploy Cloudflare Worker

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    name: Deploy Worker

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install dependencies
      run: npm install

    - name: Verify secrets
      run: |
        echo "üîç Checking if secrets are configured..."
        if [ -z "${{ secrets.CLOUDFLARE_API_TOKEN }}" ]; then
          echo "‚ùå CLOUDFLARE_API_TOKEN is not set"
          exit 1
        else
          echo "‚úÖ CLOUDFLARE_API_TOKEN is configured"
        fi

        if [ -z "${{ secrets.CLOUDFLARE_ACCOUNT_ID }}" ]; then
          echo "‚ùå CLOUDFLARE_ACCOUNT_ID is not set"
          exit 1
        else
          echo "‚úÖ CLOUDFLARE_ACCOUNT_ID is configured: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}"
        fi

    - name: Deploy to Cloudflare Workers
      uses: cloudflare/wrangler-action@v3
      with:
        apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        command: deploy
        workingDirectory: '.'

  test:
    runs-on: ubuntu-latest
    name: Test Worker
    needs: deploy
    if: success()

    steps:
    - name: Test deployed worker
      run: |
        echo "üß™ Testing deployed worker..."
        WORKER_URL="https://cors-proxy.${{ secrets.CLOUDFLARE_ACCOUNT_ID }}.workers.dev"
        echo "Worker URL: $WORKER_URL"

        # Wait a bit for deployment to propagate
        sleep 10

        # Test root path first
        echo "Testing root path..."
        curl -f "$WORKER_URL/" || echo "Root test failed (expected)"

        # Test API endpoint
        echo "Testing API endpoint..."
        curl -f "$WORKER_URL/api/test" -H "Accept: application/json" || echo "API test failed"

        echo "‚úÖ Worker test completed"